---
# tasks file for roles/bootstrap

- name: ensure staging dir exists
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ staging_dir }}"
    - "{{ staging_dir }}/bin"
    - "{{ staging_dir }}/tmp"
    - "{{ staging_dir }}/aws-cli"
    - "{{ staging_dir }}/config"
    
# install aws cli
- name: download aws cli
  get_url:
    url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
    dest: "{{ staging_dir }}/tmp/awscli-exe-linux-x86_64.zip"
    mode: '0440'
  register: _download_aws_cli

- name: extract the aws cli
  unarchive:
    src: "{{ staging_dir }}/tmp/awscli-exe-linux-x86_64.zip"
    dest: "{{ staging_dir }}/tmp"
  when: _download_aws_cli.changed
  register: _extract_aws_cli

- name: install the aws cli
  command: "{{ staging_dir }}/tmp/aws/install -i {{ staging_dir }}/aws-cli -b {{ staging_dir }}/bin"
  when: _extract_aws_cli.changed

- name: configure aws credentials
  template:
    src: "aws-config.j2"
    dest: "{{ staging_dir }}/config/aws-config"

- name: verify aws permissions
  command: "{{ staging_dir }}/bin/aws sts get-caller-identity"
  environment:
    AWS_CONFIG_FILE: "{{ staging_dir }}/config/aws-config"
  changed_when: false

# install rosa cli
- name: download rosa cli
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/rosa/latest/rosa-linux.tar.gz
    dest: "{{ staging_dir }}/tmp/rosa-linux.tar.gz"
    mode: '0440'
  register: _download_rosa_cli

- name: extract the rosa cli
  unarchive:
    src: "{{ staging_dir }}/tmp/rosa-linux.tar.gz"
    dest: "{{ staging_dir }}/tmp"
  when: _download_rosa_cli.changed
  register: _extract_rosa_cli

- name: install rosa cli
  copy:
    src: "{{ staging_dir }}/tmp/rosa"
    dest: "{{ staging_dir }}/bin/rosa"
    mode: '0755'
  when: _extract_rosa_cli.changed

- name: login rosa
  command: "rosa login --token={{ rosa_token }}"

- name: validate rosa credentials
  command: rosa verify permissions  
  environment:
    AWS_CONFIG_FILE: "{{ staging_dir }}/config/aws-config"
  changed_when: false  

- name: validate aws quotas for rosa
  command: rosa verify quota
  environment:
    AWS_CONFIG_FILE: "{{ staging_dir }}/config/aws-config"
  changed_when: false

- name: initialize rosa
  command: rosa verify quota
  environment:
    AWS_CONFIG_FILE: "{{ staging_dir }}/config/aws-config"
  changed_when: false